virt-install \
  --name={{Â inventory_hostname }} \
  --vcpus={{ vcpus }} \
  --ram={{ ram }} \
{% for disk in disks %}
  --disk path={{ disk.path }},cache=writethrough,discard=unmap,device=disk,bus=virtio,size={{ disk.size }},format={{ disk.format | default('raw') }} \
{% endfor %}
{% for bridge in bridges %}
  --network bridge={{ bridge }},model=virtio \
{% endfor %}
  --connect=qemu:///system \
  --autostart \
  --noautoconsole \
{% if provision_virt_install_extra_settings is defined %}
{% for param in provision_virt_install_extra_settings %}
  {{ param }} \
{% endfor %}
{% endif %}
{% if guest_type is not defined or guest_type != "image" %}
{% if ansible_distribution == "CentOS" and ansible_distribution_major_version|int >= 7 %}
  --cpu=host-model \
{% else %}
  --cpu=host \
{% endif %}
{% for device in (vm_pci_passthrough_devices | default([])) %}
  --host-device={{ device }} \
{% endfor %}
  --graphics=vnc,keymap="fi" \
{% if os_variant is defined %}
  --os-variant={{ os_variant }} \
 {% endif %}
 --wait={{ install_timeout }} \
  --location={{ install_url }} \
  --initrd-inject={{ runtime_tempdir }}/{{ inventory_hostname }}.ks \
  --extra-args="ks=file:/{{ inventory_hostname }}.ks"
{% else %}
  --events on_poweroff=preserve \
  --disk path={{ image_path}}/{{ inventory_hostname }}.iso,device=cdrom,perms=ro \
  --os-type=linux
{% endif %}
