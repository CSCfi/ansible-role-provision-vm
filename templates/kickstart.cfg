# basics
text
skipx
#cmdline
reboot
firstboot --disable

{% if yum_proxy is defined %}
url --url="{{ install_url }}" --proxy={{ yum_proxy }}
{% else %}
url --url="{{ install_url }}"
{% endif %}

# localization
lang en_GB
keyboard fi
timezone --utc Europe/Helsinki

# repos
{% if repos is defined %}
{% for repo in repos %}
repo --name="{{ repo.name }}" {% if repo.additional_arguments is defined %}{{ repo.additional_arguments }}{% endif %} --baseurl={{ repo.url }}
{% endfor %}
{% endif %}

{% if networks is defined %}
{% for network in networks %}
{{ network }}
{% endfor %}
{% endif %}

# firewall
firewall --enabled --service=ssh

{% if firewall_rules is defined %}
{% for firewall_rule in firewall_rules %}
{{ firewall_rule }}
{% endfor %}
{% endif %}

{% if central_log_host is defined %}
# Logging
logging --host={{ central_log_host|replace("@","") }}
{% endif %}

# authentication
rootpw {{ root_password }}

{% if os_variant in ["rhel6", "rhel7"] %}
authconfig --useshadow --passalgo=sha512 --kickstart
{% endif %}

{% if kickstart_selinux is defined and kickstart_selinux == 'disabled' %}
selinux --disabled
{% endif %}

{% if kickstart_selinux is defined and kickstart_selinux == 'permissive' %}
selinux --permissive
{% endif %}

{% if kickstart_selinux is defined and kickstart_selinux == 'enforcing' %}
selinux --enforcing
{% endif %}

# disks
{% if kickstart_selinux is defined and kickstart_selinux == 'disabled' %}
bootloader --location=mbr --append="selinux=0"
{% else %}
bootloader --location=mbr
{%endif %}
zerombr
clearpart --all --initlabel
{% if kickstart_partitions is defined %}
{% for partition in kickstart_partitions %}
{{ partition }}
{% endfor %}
{% else %}
part / --fstype="ext4" --fsprofile="news" --grow --size=4096 --ondrive=vda
part swap --asprimary --size=1024 --ondrive=vda
{% endif %}
# trimming of sparse disks
services --enabled fstrim.timer

{% if os_variant == "centos8" %}
%packages
@^minimal-environment
kexec-tools

{% else %}
%packages
@core
{% endif %}
{% if repos is defined %}
{% for repo in repos %}
{% if repo.pkgname is defined %}
{{ repo.pkgname }}
{% endif %}
{% endfor %}
{% endif %}
{% if puppetmaster_ip is defined %}
{{ puppet_agent_package }}
facter
hiera
{% endif %}
{% if base_packages is defined %}
{% for pkg in base_packages %}
{{ pkg }}
{% endfor %}
{% endif %}
{% if extra_packages is defined %}
{% for pkg in extra_packages %}
{{ pkg }}
{% endfor %}
{% endif %}
{% if exclude_packages is defined %}
{% for pkg in exclude_packages %}
-{{ pkg }}
{% endfor %}
{% endif %}
%end

%post --log=/root/post-ks-log
echo "exclude={{ yum_exclude }}" >> /etc/yum.conf
/usr/bin/yum clean all
/usr/bin/yum update -y --skip-broken
echo "{{ internal_ip }} {{ inventory_hostname }}" >> /etc/hosts
{% if os_variant == "centos8" %}
hostname -b {{ inventory_hostname }}
{% endif %}

{% if puppetmaster_ip is defined %}
echo "{{ puppetmaster_ip }}  puppetmaster puppet {{ puppetmaster_fqdn }}" >> /etc/hosts
{% endif %}

{% if root_keys is defined %}
mkdir -p -m 0600 /root/.ssh
{% for root_key in root_keys %}
echo "{{ root_key }}" >> /root/.ssh/authorized_keys
{% endfor %}
chmod 0400 /root/.ssh/authorized_keys
{% endif %}

{% if routes is defined %}
{% for route in routes %}
/sbin/ip route add {{ route }}
{% endfor %}
{% endif %}
{%- if provision_kickstart_extra_post_commands is defined -%}
{% for cmd in provision_kickstart_extra_post_commands %}
{{ cmd }}
{% endfor %}
{% endif %}
%end
